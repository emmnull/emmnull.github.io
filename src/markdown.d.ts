// âš  This file was generated by the markdown vite plugin.
// Any manual modifications will be overwritten and lost.

declare type Markdown<
	T extends Record<string,unknown> = Record<string,unknown>
> = {
	default: SvelteComponent;
	metadata: T
}

/**
 * See https://github.com/pngwn/MDsveX/blob/main/packages/mdsvex/globals.d.ts
 */
declare module '*.md' {
	import type { SvelteComponent } from 'svelte';

	export default SvelteComponent;
	export const metadata: Markdown['metadata'];
}

declare module 'virtual:works' {
	import type { z } from 'zod/v4';

	interface Collection {}

	type Metadata = Collection['schema'] extends ZodObject
		? z.infer<Collection['schema']>
		: Markdown['metadata'];

	export const slugs: readonly ["ai-edi","covid-19","labdi","saint-constant"];
	
	export type Slug = (typeof slugs)[number];
	
	export function all(locale?: Locale): (Markdown<Metadata> & { slug: Slug })[];
	
	export async function one(
		slug: Slug,
		locale?: Locale
	): Promise<Markdown<Metadata>>
}