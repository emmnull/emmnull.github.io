
// âš  This file was generated by the markdown vite plugin.
// Any manual modifications will be overwritten and lost.

/* eslint-disable @typescript-eslint/no-empty-object-type */

declare type Markdown<
	T extends Record<string, unknown> = Record<string,unknown>
> = {
	default: SvelteComponent;
	metadata: T;
};

declare module 'virtual:markdown' {
	interface Config {}
}

declare module '*.md' {
	import type { SvelteComponent } from 'svelte';

	export default SvelteComponent;
	export const metadata: Markdown['metadata'];
}

declare module 'virtual:works' {
	import type { Config } from 'virtual:markdown';
	import type * as z from 'zod';
	
	type UserConfig = typeof import('../markdown.config.ts').default;

	type Metadata = UserConfig['collections']['works']['schema'] extends z.ZodObject
		? z.infer<UserConfig['collections']['works']['schema']>
		: Config.Collections['works']['schema'] extends z.ZodObject
			? z.infer<Config.Collections['works']['schema']>
			: Markdown['metadata'];

	export const params: readonly {"./content/works/ai-edi/en.md":{"slug":"ai-edi","locale":"en"},"./content/works/ai-edi/fr.md":{"slug":"ai-edi","locale":"fr"},"./content/works/covid-19/en.md":{"slug":"covid-19","locale":"en"},"./content/works/covid-19/fr.md":{"slug":"covid-19","locale":"fr"},"./content/works/labdi/en.md":{"slug":"labdi","locale":"en"},"./content/works/labdi/fr.md":{"slug":"labdi","locale":"fr"},"./content/works/saint-constant/en.md":{"slug":"saint-constant","locale":"en"},"./content/works/saint-constant/fr.md":{"slug":"saint-constant","locale":"fr"}};

	export const ids: readonly ["./content/works/ai-edi/en.md","./content/works/ai-edi/fr.md","./content/works/covid-19/en.md","./content/works/covid-19/fr.md","./content/works/labdi/en.md","./content/works/labdi/fr.md","./content/works/saint-constant/en.md","./content/works/saint-constant/fr.md"];

	export type Id = keyof typeof params;

	export type Params = (typeof params)[Id];

	export function all(): (Markdown<Metadata> & { params: Params })[];

	export async function one(
		item: (Id | (string & {})) | (Params | (Record<string, unknown> & {})),
	): Promise<Markdown<Metadata>>;
}
