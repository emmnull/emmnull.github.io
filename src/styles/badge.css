@utility aspect-square {
  &.badge,
  &.badge-bordered,
  &.badge-dashed,
  &.badge-ghost,
  &.badge-cta {
    --badge-icon-opacity: 100%;
    padding-inline: var(--spacing-io-nesting);
  }
}

@layer components {
  .badge,
  .badge-bordered,
  .badge-dashed,
  .badge-ghost,
  .badge-cta {
    /* props */
    --badge-color: ;
    --badge-background: ;
    --badge-border-color: ;
    --badge-border-style: ;
    --badge-icon-color: ;
    --badge-icon-opacity: ;
    /* base */
    color: var(--badge-color);
    background: var(--badge-background);
    border-color: var(--badge-color);
    border-style: var(--border-style);
    border-width: var(--border-width-io);
    /* contain: layout; */
    position: relative;
    display: inline-flex;
    flex-direction: row;
    white-space: nowrap;
    flex-wrap: nowrap;
    text-overflow: ellipsis;
    align-items: center;
    justify-content: center;
    transition-property: color, background;
    transition-timing-function: ease-out;
    transition-duration: calc(var(--default-transition-duration) * 0.5);
    gap: calc(var(--spacing-io-gap) * 0.55);
    padding-inline: calc(var(--spacing-io-padding) * 0.6);
    height: calc(var(--spacing-io) * 0.65);
    min-width: calc(var(--spacing-io) * 0.65);
    border-radius: calc(var(--radius-io) * 0.7);
    /* icon */
    .badge-icon {
      transition-duration: inherit;
      color: var(--badge-icon-color);
      opacity: var(--badge-icon-opacity);
      width: var(--spacing-io-icon);
      height: var(--spacing-io-icon);
      stroke-width: var(--stroke-width-io-icon);
    }
    & > * {
      @variant icon {
        transition-duration: inherit;
        color: var(--badge-icon-color);
        opacity: var(--badge-icon-opacity);
        width: var(--spacing-io-icon);
        height: var(--spacing-io-icon);
        stroke-width: var(--stroke-width-io-icon);
      }
    }
    /* hover */
    &:hover {
      &:not(:active) {
        transition-duration: 0s;
      }
    }
    /* focused */
    &:focus-visible {
      outline-color: var(--color-primary);
      outline-width: var(--outline-width-io-focus);
    }
    /* active */
    &:active {
      transition-duration: calc(0.5 * var(--default-transition-duration));
      transform: var(--transform-io-active);
    }
  }

  .badge {
    --badge-color: var(--color-on-io);
    --badge-background: --alpha(var(--color-io) / var(--opacity-io-background));
  }

  .badge-cta {
    --badge-color: var(--color-on-cta);
    --badge-background: var(--color-cta);
  }
}
