@utility aspect-square {
  --button-icon-opacity: 100%;
  --button-padding: var(--spacing-io-nesting);
}

@utility button-icon {
  transition-duration: inherit;
  color: var(--button-icon-color);
  opacity: var(--button-icon-opacity);
  width: var(--spacing-io-icon);
  height: var(--spacing-io-icon);
  stroke-width: var(--stroke-width-io-icon);
}

@utility button-content {
  @apply io-nest;
  max-height: var(--spacing-io-nested);
}

@utility button-leading {
  @apply button-content;
}

@utility button-trailing {
  @apply button-content;
}

@utility button-base {
  /* props */
  --button-padding: var(--spacing-io-padding);
  --button-color: ;
  --button-background: ;
  --button-border-color: ;
  --button-border-style: ;
  --button-icon-color: ;
  --button-icon-opacity: ;

  /* base */
  color: var(--button-color);
  background: var(--button-background);
  border-color: var(--button-border-color);
  border-style: var(--button-border-style);
  padding-inline: var(--button-padding);
  position: relative;
  display: inline-flex;
  /* contain: layout; */
  flex-direction: row;
  flex-wrap: nowrap;
  text-overflow: ellipsis;
  align-items: center;
  justify-content: center;
  transition-property: all;
  transition-timing-function: ease-out;
  transition-duration: var(--default-transition-duration);
  border-radius: var(--radius-io);
  gap: var(--spacing-io-gap);
  height: var(--spacing-io);
  max-height: 100%;
  border-width: var(--border-width-io);
  outline-color: var(--color-cta);

  /* hover */
  &:hover {
    &:not(:active) {
      transition-duration: 0s;
    }
  }

  /* focused */
  &:focus-visible {
    outline-style: solid;
    outline-width: var(--outline-width-focus);
  }

  /* active */
  &:active {
    transition-duration: calc(0.5 * var(--default-transition-duration));
    transform: var(--transform-io-active);
  }

  /* with leading content */
  &:has(> .button-leading) {
    padding-left: var(--spacing-io-nesting);
  }

  /* with trailing content */
  &:has(> .button-trailing) {
    padding-right: var(--spacing-io-nesting);
  }

  /* auto-icon */
  & > * {
    @variant icon {
      @apply button-icon;
    }
  }
}

@utility button-pseudo-face {
  &:not(input, select, textarea) {
    background: none;
    &::before {
      content: '';
      background: var(--button-background);
      inset: var(--spacing-io-background-inset);
      pointer-events: none;
      z-index: -1;
      position: absolute;
      border-radius: inherit;
      transition: inherit;
    }
    &:hover {
      &:not(:active)::before {
        transition-property: inset;
        transition-duration: calc(0.25 * var(--default-transition-duration));
      }
      &:not([aria-current], :target)::before {
        inset: 0;
      }
    }
    &:is([aria-current], :target)::before {
      inset: 0;
    }
  }
}

@utility button-pseudo-border {
  &:not(input, select, textarea) {
    border-style: none;
    &::after {
      content: '';
      border-color: var(--button-border-color);
      border-style: var(--button-border-style);
      border-width: var(--border-width-io);
      pointer-events: none;
      z-index: 1;
      position: absolute;
      border-radius: inherit;
      inset: 0;
      transition-property: all;
      transition-duration: inherit;
      transition-timing-function: inherit;
    }
  }
}

/* default button */
@utility button {
  @layer components {
    @apply button-base button-pseudo-face;
    --button-icon-opacity: var(--opacity-io-icon);
    --button-background: --alpha(var(--color-io) / var(--opacity-io-background));
    &:hover {
      &:not([aria-current], :target) {
        --button-icon-opacity: calc(var(--opacity-io-icon) * 1.5);
        --button-text: color-mix(in oklch, currentcolor, light-dark(black, white) 50%);
      }
    }
  }
}

/* bordered button */
@utility button-bordered {
  @layer components {
    @apply button-base button-pseudo-border button-pseudo-face;
    --button-border-style: solid;
  }
}

/* dashed button */
@utility button-dashed {
  @layer components {
    @apply button-bordered;
    --button-border-style: dashed;
  }
}

/* ghost button */
@utility button-ghost {
  @layer components {
    @apply button-base button-pseudo-face;
    --button-background: transparent;
  }
}

/* call-to-action button */
@utility button-cta {
  @layer components {
    @apply button-base;
  }
}

/* nav button */
@utility button-nav {
  @layer components {
    @apply button-base button-pseudo-face;
    backdrop-filter: url(#beveled);
    font-weight: var(--font-weight-semibold);
    --button-color: var(--color-on-io);
    --button-background: --alpha(var(--color-cta) / 0%);
    --button-border-color: --alpha(currentcolor / 0%);
    --button-icon-opacity: var(--opacity-io-icon);
    &:hover {
      &:not([aria-current], :target) {
        backdrop-filter: url(#beveled);
        --button-color: var(--color-on-cta);
        --button-background: --alpha(var(--color-cta) / var(--opacity-io-background-alt));
        --button-icon-opacity: 100%;
      }
    }
    &:is(
        [aria-current],
        [aria-expanded='true'],
        [aria-pressed='true'],
        :target,
        :open,
        [data-open],
        [data-state='open'],

      ) {
      --button-color: var(--color-cta);
      --button-border-color: --alpha(var(--color-cta) / var(--opacity-io-border));
      --button-icon-opacity: 100%;
    }
  }
}
