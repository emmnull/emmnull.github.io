/* overrides */

@utility aspect-square {
  --button-icon-opacity: var(--opacity-io-icon-strong);
  --button-padding: var(--spacing-io-nesting);
}

/* states */

@custom-variant button-hover {
  &:hover:not(:active, [aria-current]:where(:not([aria-current='false'])), :target) {
    @slot;
  }
}

@custom-variant button-focus {
  &:focus-visible {
    @slot;
  }
}

@custom-variant button-press {
  &:active {
    @slot;
  }
}

@custom-variant button-current {
  &:is([aria-current]:where(:not([aria-current='false'])), [aria-checked='true'], [aria-pressed='true'], :checked),
  &:has(
      > :is([aria-current]:where(:not([aria-current='false'])), [aria-checked='true'], [aria-pressed='true'], :checked)
    ) {
    @slot;
  }
}

@custom-variant button-open {
  &[aria-expanded='true'],
  &:open,
  &[data-open],
  &[data-state='open'] {
    @slot;
  }
}

@custom-variant button-disabled {
  &:is([aria-disabled='true'], :disabled),
  &:has(> :is([aria-disabled='true'], :disabled)) {
    @slot;
  }
}

/* parts */

@utility button-base {
  --button-padding: var(--spacing-io-padding);
  --button-color: ;
  --button-background: ;
  --button-border-color: ;
  --button-border-style: ;
  --button-icon-color: ;
  --button-icon-opacity: ;
  color: var(--button-color);
  background: var(--button-background);
  border-color: var(--button-border-color);
  border-style: var(--button-border-style);
  padding-inline: var(--button-padding);
  position: relative;
  display: inline-flex;
  flex-direction: row;
  flex-wrap: nowrap;
  text-overflow: ellipsis;
  align-items: center;
  justify-content: center;
  z-index: 0;
  min-width: fit-content;
  transition-property: all;
  transition-timing-function: ease-out;
  transition-duration: var(--transition-duration-io);
  padding-block: var(--spacing-io-nesting);
  border-radius: var(--radius-io);
  gap: var(--spacing-io-gap);
  height: var(--spacing-io);
  border-width: var(--border-width-io);
  outline-color: oklch(from var(--color-cta) calc(l * var(--io-lightness-factor-soft)) c h);
  @variant button-hover {
    transition-duration: 0s;
  }
  @variant button-focus {
    outline-style: solid;
    outline-width: var(--outline-width-io);
  }
  @variant button-press {
    transition-duration: calc(0.5 * var(--transition-duration-io));
    transform: var(--transform-io-press);
  }
  /* with leading content */
  &:has(> .button-leading) {
    padding-left: var(--spacing-io-nesting);
  }
  /* with trailing content */
  &:has(> .button-trailing) {
    padding-right: var(--spacing-io-nesting);
  }
  /* auto-icon */
  & > * {
    @variant icon {
      @apply button-icon;
    }
  }
}

@utility button-pseudo-face {
  &:not(input, select, textarea) {
    background: none;
    &::before {
      content: '';
      background: var(--button-background);
      inset: var(--spacing-io-face-inset);
      pointer-events: none;
      z-index: -1;
      position: absolute;
      border-radius: inherit;
      transition: inherit;
    }
    @variant button-hover {
      &::before {
        transition-property: inset;
        transition-duration: calc(0.5 * var(--transition-duration-io));
        inset: 0;
      }
    }
    @variant button-press {
      &::before {
        inset: 0;
      }
    }
    @variant button-current {
      &::before {
        inset: 0;
      }
    }
    @variant button-open {
      &::before {
        inset: 0;
      }
    }
  }
}

@utility button-pseudo-border {
  &:not(input, select, textarea) {
    border-style: none;
    &::after {
      content: '';
      border-color: var(--button-border-color);
      border-style: var(--button-border-style);
      border-width: var(--border-width-io);
      pointer-events: none;
      z-index: 1;
      position: absolute;
      border-radius: inherit;
      inset: 0;
      transition-property: all;
      transition-duration: inherit;
      transition-timing-function: inherit;
    }
  }
}

@utility button-icon {
  transition-duration: inherit;
  color: var(--button-icon-color);
  opacity: var(--button-icon-opacity);
  width: var(--spacing-io-icon);
  height: var(--spacing-io-icon);
  stroke-width: var(--stroke-width-io-icon);
}

@utility button-content {
  @apply io-nest;
}

@utility button-leading {
  @apply button-content;
}

@utility button-trailing {
  @apply button-content;
}

/* variants */

@utility button {
  @apply button-base;

  --button-background: --alpha(var(--color-io) / var(--opacity-io-face));
  --button-color: var(--color-on-io);
  --button-icon-opacity: var(--opacity-io-icon);
  @variant button-hover {
    --button-background: --alpha(var(--color-io) / var(--opacity-io-face-strong));
    --button-color: oklch(from var(--color-on-io) calc(l * var(--io-lightness-factor-strong)) c h);
    --button-icon-opacity: var(--opacity-io-icon-strong);
  }
}

@utility button-bordered {
  @apply button-base button-pseudo-border button-pseudo-face;
  --button-background: transparent;
  --button-color: var(--color-on-io);
  --button-icon-opacity: var(--opacity-io-icon);
  --button-border-style: solid;
  --button-border-color: --alpha(var(--color-io) / var(--opacity-io-border));
  @variant button-hover {
    --button-background: --alpha(var(--color-io) / var(--opacity-io-face));
    --button-color: oklch(from var(--color-on-io) calc(l * var(--io-lightness-factor-strong)) c h);
    --button-icon-opacity: var(--opacity-io-icon-strong);
    --button-border-color: --alpha(var(--color-io) / var(--opacity-io-border-soft));
  }
  @variant button-press {
    --button-border-color: transparent;
    --button-background: --alpha(var(--color-io) / var(--opacity-io-face-soft));
  }
  @variant button-current {
    --button-border-color: --alpha(var(--color-io) / var(--opacity-io-border-strong));
  }
}

@utility button-dashed {
  @apply button-bordered;
  --button-border-style: dashed;
}

@utility button-ghost {
  @apply button-base button-pseudo-face;
  --button-background: transparent;
  --button-color: var(--color-on-io);
  --button-icon-opacity: var(--opacity-io-icon);
  @variant button-hover {
    --button-background: --alpha(var(--color-io) / var(--opacity-io-face));
    --button-color: oklch(from var(--color-on-io) calc(l * var(--io-lightness-factor-strong)) c h);
    --button-icon-opacity: var(--opacity-io-icon-strong);
  }
  @variant button-press {
    --button-background: --alpha(var(--color-io) / var(--opacity-io-face-soft));
  }
  @variant button-current {
    --button-color: var(--color-cta);
    --button-background: --alpha(var(--color-cta) / var(--opacity-io-face-soft));
  }
}

@utility button-cta {
  @apply button-base;
  --button-background: var(--color-cta);
  --button-color: var(--color-on-cta);
  --button-icon-opacity: var(--opacity-io-icon);
  @variant button-hover {
    --button-background: oklch(from var(--color-cta) calc(l * var(--io-lightness-factor-strong)) c h);
    --button-color: oklch(from var(--color-on-cta) calc(l * var(--io-lightness-factor-strong)) c h);
    --button-icon-opacity: var(--opacity-io-icon-strong);
  }
  @variant button-press {
  }
}

@utility button-nav {
  @apply button-base button-pseudo-face;
  backdrop-filter: url(#beveled);
  font-weight: var(--font-weight-semibold);
  --color-io: var(--color-cta);
  --button-color: var(--color-on-io);
  --button-background: transparent;
  --button-icon-opacity: var(--opacity-io-icon-strong);
  @variant button-hover {
    --button-color: oklch(from var(--color-on-io) calc(l * var(--io-lightness-factor-strong)) c h);
    --button-background: --alpha(var(--color-cta) / var(--opacity-io-face-soft));
    --button-icon-opacity: 100%;
  }
  @variant button-current {
    --button-color: var(--color-cta);
  }
  @variant button-open {
    --button-color: var(--color-cta);
    --button-background: --alpha(var(--color-io) / var(--opacity-io-face-soft));
    --button-icon-opacity: 100%;
  }
}
